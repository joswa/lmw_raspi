package lmwraspi;

import java.awt.Color;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.SocketException;
import java.net.URLEncoder;
import java.net.UnknownHostException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author joswa
 */
public class MainFrame extends javax.swing.JFrame {

    public static int steps=1;
    public static String EmpNumber;
    public static String EmpName;
    public static String Costcenter;
    public static String Supervisername;
    public static String Jobcardnumber;
    
    public static String Item;
    public static String Opnnumber;
    public static String Setuptime;
    public static String Jobnumber;
    public static String Description;
    public static String Operationadesign;
    public static String Operationtime;
    public static String Qty;
    public static String Remarks;
    
    
    
    
    public static String starttime;
    public static String Endtime;
    public static String Setupstarttime;
    public static String Setupendtime;
    public static String pausetime;
    public static String Resumetime;
    public static String Terminatetime;
     public static String TotalTime;
     
     public static String TotalGpioTime;
     String setupstart;
     String Terminatestatus;
     String Startstatus;
     String Pausestatus;
     String Resumestatus;
     
     
   public getSettings objSettings;
    /**
     * Creates new form NewJFrame
     * @throws java.io.IOException
     * @throws java.lang.InterruptedException
     */
    public MainFrame() throws IOException, InterruptedException {
        
        initComponents();
        getSettings objSettings = new getSettings();
        objSettings.MainWindow=this;
        TotalGpioTime = ListenGpio.Total;
        
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblJobOrderNo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Employeename = new javax.swing.JLabel();
        Employeenumber = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        SuperviserName = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Costcenterlbl = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        JobcardNumer = new javax.swing.JLabel();
        Itemcode = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        OPNNO = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Setuptimelbl = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        Descriptionlabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jobbnumberlabe = new javax.swing.JLabel();
        Operationaldesignlabel = new javax.swing.JLabel();
        Operationaltimelabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Qtylabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Mcno = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        Sch_Start_date = new javax.swing.JLabel();
        Sch_End_date = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Search");

        jLabel4.setText("Emp No");

        jLabel5.setText("Emp Name");

        Employeename.setText("Emp Name");

        Employeenumber.setText("Emp No");

        jLabel8.setText("Cost Center");

        SuperviserName.setText("Emp Name");

        jLabel10.setText("Superviser Name");

        Costcenterlbl.setText("Cost center");

        jLabel12.setText("Job Card Nmber");

        JobcardNumer.setText("Job Card Nmber");

        Itemcode.setText("Item");

        jLabel15.setText("OPN NO");

        jLabel16.setText("Item");

        OPNNO.setText("Item");

        jLabel18.setText("Setup Time");

        Setuptimelbl.setText("Item");

        jLabel20.setText("Job Number");

        jLabel21.setText("Description");

        jLabel22.setText("Operation Design");

        Descriptionlabel.setText("Description");

        jLabel25.setText("Operation Time");

        jobbnumberlabe.setText("Job Number");

        Operationaldesignlabel.setText("Operation Design");

        Operationaltimelabel.setText("Operation Time");

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Qty");

        Qtylabel.setText("jLabel6");

        jLabel6.setText("Mc No");

        Mcno.setText("Mc No");

        jLabel19.setText("Sch Start date");

        Sch_Start_date.setText("Sch Start date");

        Sch_End_date.setText("Sch End date");

        jLabel30.setText("Sch End date");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JobcardNumer)
                            .addComponent(Itemcode, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(150, 150, 150)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Descriptionlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jobbnumberlabe, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Operationaldesignlabel))
                                .addGap(433, 433, 433))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Operationaltimelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE)
                                .addContainerGap())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Employeenumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Employeename, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Mcno))
                            .addComponent(Costcenterlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SuperviserName, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(214, 214, 214))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(60, 60, 60)
                .addComponent(Qtylabel)
                .addGap(358, 358, 358))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OPNNO, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Setuptimelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sch_Start_date, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sch_End_date, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Employeenumber)
                            .addComponent(jLabel6)
                            .addComponent(Mcno))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Employeename))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Costcenterlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(SuperviserName)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(Descriptionlabel)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Qtylabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JobcardNumer)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jobbnumberlabe, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Itemcode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OPNNO)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Setuptimelbl)
                    .addComponent(jLabel18)
                    .addComponent(Operationaldesignlabel)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(Operationaltimelabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(Sch_Start_date))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(Sch_End_date))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(399, 399, 399)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblJobOrderNo, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(272, 272, 272))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblJobOrderNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
                                                 
        // TODO add your handling code here:
       
         String sTmp = jTextField2.getText();
        System.out.println(sTmp);
        
        if (steps==1){ //step 1 for check jobs pannel
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
           FillJobspannel(sTmp);
           
        }
       else if (steps == 2){ //steps 2 for check other navigation barcodes
           
       
           System.out.println(steps);
           
       boolean ActionedFlag=false;
       if(sTmp.compareToIgnoreCase("START")==0)
        {
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
            
            Startstatus = "Start";
            Status(sTmp);
            }
       if(sTmp.compareToIgnoreCase("STOP")==0)
        {
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
            Startstatus = "Sucess";
            
            Status(sTmp);
            }
       if(sTmp.compareToIgnoreCase("SETUPSTART")==0)
        {
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
             setupstart="Start";
            
            Status(sTmp);
            }
       if(sTmp.compareToIgnoreCase("SETUPSTOP")==0)
        {
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
            setupstart="Sucess";
            
            Status(sTmp);
            }
            if(sTmp.compareToIgnoreCase("PAUSE")==0)
        {
            steps=4; // asssigning steps to select remarks after PAUSE state
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
            if(setupstart=="START"){
                Pausestatus = "PSS"+Startdate;
                }
            if(setupstart=="Sucess"){
                Pausestatus = "PAS"+Startdate;
                }
           if(Startstatus=="START"){
                Pausestatus = "PMS"+Startdate;
                }
            if(Startstatus=="Sucess"){
                Pausestatus = "PAM"+Startdate;
                } 
            
            Status(sTmp);
            }
            if(sTmp.compareToIgnoreCase("RESUME")==0)
        {
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            if(setupstart=="START"){
                Resumestatus = "RS"+Startdate;
                }
            if(setupstart=="Sucess"){
                Resumestatus = "RAS"+Startdate;
                }
           if(Startstatus=="START"){
                Resumestatus = "RMS"+Startdate;
                }
            if(Startstatus=="Sucess"){
                Resumestatus = "RAMS"+Startdate;
                } 
            
            Status(sTmp);
            }
            if(sTmp.compareToIgnoreCase("TERMINATE")==0)
        {
             DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            if(setupstart=="START"){
                Terminatestatus = "TS"+Startdate;
                }
            if(setupstart=="Sucess"){
                Terminatestatus = "TAS"+Startdate;
                }
           if(Startstatus=="START"){
                Terminatestatus = "TMS"+Startdate;
                }
            if(Startstatus=="Sucess"){
                Terminatestatus = "TAMS"+Startdate;
                } 
            
            Status(sTmp);
            }
            if(sTmp.compareToIgnoreCase("END")==0)
        {
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
            
            
            Status(sTmp);
            }
            if(steps==4){ //To check pause status is set 
                
             if(sTmp.compareToIgnoreCase("REMARKS")==0)
        {
            //   Double qty=Double.parseDouble(CurrentTable.getValueAt(CurrentTable.getSelectedRow(), 3).toString());
            steps = 3; //Steps for check weather it is on Normal Remarks
            if(setupstart=="START" || Startstatus =="START" || setupstart=="Sucess" || Startstatus =="Sucess"){
                steps = 4; // Steps check for Lunch Break and other Breaks
                }
            
            }
            ActionedFlag=true;
            
            
           
            }
            else{
                jLabel3.setText("Please select Remarks");
                }
        } 
        
        else if (steps == 3){
             try {
                 Remarks(sTmp);
                 System.out.println(sTmp);
             } catch (UnsupportedEncodingException ex) {
                 Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
             }
        
        }
        
         jTextField2.setText("");    
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            ListenGpio test = new ListenGpio();
            test.start();
        } catch (InterruptedException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SocketException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        String[] greenhigharray = ListenGpio.GreenHigh.split("|");
        String greenhighsplit = greenhigharray[0];
        //greenhighsplit = greenhighsplit.replaceAll("GH GL", "");
        String greenlowsplit = greenhigharray[1];
        String[] greenhigharray1 = greenhighsplit.split("~");
        String[] greenlowarray = greenlowsplit.split("~");
        arrayconvertion.main(ListenGpio.GreenHigh+ListenGpio.GreenLow,1);
        arrayconvertion.main(ListenGpio.RedHigh+ListenGpio.RedLow,2);
        arrayconvertion.main(ListenGpio.OrangeHigh+ListenGpio.OrangeLow,3);
        System.out.println(ListenGpio.GreenHigh+ListenGpio.GreenLow);
        JOptionPane.showConfirmDialog(rootPane, "Green time  "+ListenGpio.GreenHigh+ListenGpio.GreenLow); 
        JOptionPane.showConfirmDialog(rootPane, "Green time  "+ListenGpio.GreenHigh+ListenGpio.GreenLow); 
    }//GEN-LAST:event_jButton2ActionPerformed

     
    public void Remarks(String remarks) throws UnsupportedEncodingException{
        
    /*    
        boolean find;
        steps=2;
        System.out.println("In Remarks");
        
        final Scanner scanner = new Scanner("remarks.txt");
    while (scanner.hasNextLine()) {
   final String lineFromFile = scanner.nextLine();
   if(lineFromFile.contains(remarks)) { 
       // a match!
       System.out.println("I found " +remarks+ " in file ");
       find = true;
       
   }
   else {
   find = false;
   }*/
    System.out.println("In Remarks");
            
    
    if(steps==3){      
        System.out.println(getSettings.empno);
        System.out.println(getSettings.BASEURL);
        System.out.println(getSettings.CHECKREMARKS);
        System.out.println(getSettings.RecordSep);
        String sTmp = null;
        try {
            sTmp = objSettings.CHECKREMARKS;
            sTmp = sTmp.replaceAll("#remarks#", URLEncoder.encode(remarks, "UTF-8"));
            sTmp = sTmp.replaceAll("#remarks_head_id#", URLEncoder.encode("0", "UTF-8"));//Head Id 0 for Normal Remarks
            sTmp = objSettings.callURL(sTmp);
            
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(sTmp);
        
   if(sTmp.length()>0){
       steps=2;
      JOptionPane.showConfirmDialog(rootPane, "You are selected remark is:  "+sTmp);
      jLabel3.setText("Search");
   }
   else {
       jLabel3.setText("please select correct remarks");
       steps=3;
   }
Remarks += remarks+"~";
    }
    else if(steps==4){
        
        System.out.println(getSettings.empno);
        System.out.println(getSettings.BASEURL);
        System.out.println(getSettings.CHECKREMARKS);
        System.out.println(getSettings.RecordSep);
        String sTmp = null;
        try {
            System.out.println(getSettings.CHECKREMARKS.replaceAll("#remarks#", URLEncoder.encode(remarks, "UTF-8")));
            sTmp = objSettings.CHECKREMARKS;
            sTmp = sTmp.replaceAll("#remarks#", URLEncoder.encode(remarks, "UTF-8"));
            sTmp = sTmp.replaceAll("#remarks_head_id#", URLEncoder.encode("1", "UTF-8"));//Head Id 0 for Break Remarks
            sTmp = objSettings.callURL(sTmp);
            
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(sTmp);
        
   if(sTmp.length()>0){
       steps=2;
      JOptionPane.showConfirmDialog(rootPane, "You are selected remark is:  "+sTmp);
      jLabel3.setText("Search");
   }
   else {
       jLabel3.setText("please select correct remarks");
       steps=3;
   }
Remarks += remarks+"~";
    }
    }
    



    
    
    
    
    public  void FillJobspannel(String Job)
    {
        /* Get Jobs List */
        System.out.println("Jobs List");
            
        System.out.println(getSettings.empno);
        System.out.println(getSettings.BASEURL);
        System.out.println(getSettings.URLGETJOBS);
        System.out.println(getSettings.RecordSep);
        String sTmp = null;
        try {
            sTmp = getSettings.callURL(objSettings.URLGETJOBS.replaceAll("#jobno#", URLEncoder.encode(Job, "UTF-8")));
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        
        System.out.println(sTmp);
        
        jLabel1.setVisible(true);
        
        if(sTmp.indexOf(objSettings.RecordSep)<0)
        {
            jLabel1.setText("No Pending Jobs...");
            return;
        }
        String sTmpArr[]=sTmp.split(objSettings.RecordSep);
        //lblJobOrderNo.setText(sTmpArr[0]+ "-"+sTmpArr[1]+ "-"+sTmpArr[2]+ "-"+sTmpArr[3]+ "-"+sTmpArr[4]);
        //jLabel1.setText(sTmpArr[0]);
        
        System.out.println(sTmpArr.length);
         for(int i=0;i<sTmpArr.length;i++)
                {
                    String[] sTmpArr1=sTmpArr[i].split("~");
                    
                    System.out.println(sTmpArr1[1]);
                    
                    jobbnumberlabe.setText(sTmpArr1[0]);
                    SuperviserName.setText(sTmpArr1[1]);
                    Costcenterlbl.setText(sTmpArr1[2]);
                    JobcardNumer.setText(sTmpArr1[3]);
                    Itemcode.setText(sTmpArr1[4]);
                    OPNNO.setText(sTmpArr1[5]);
                    Setuptimelbl.setText(sTmpArr1[6]);    
                    Descriptionlabel.setText(sTmpArr1[7]);
                    Operationaldesignlabel.setText(sTmpArr1[8]);
                    Operationaldesignlabel.setText(sTmpArr1[9]);
                    Qtylabel.setText(sTmpArr1[10]);
                 //   jLabel1.setIcon(new ImageIcon(getSettings.callURL(objSettings.ImageUrl+sTmpArr1[4]+".jpg")));
                    
                }
    
        steps=2;
        
                

    }
     
     
     public void pushdata(){
          System.out.println("Push data");
            
        System.out.println(getSettings.empno);
        System.out.println(getSettings.BASEURL);
        System.out.println(getSettings.URLGETJOBS);
        System.out.println(getSettings.RecordSep);
        String sTmp = null;
        try {
            sTmp = objSettings.INSERTDATA.replaceAll("#jobno#", URLEncoder.encode(Jobnumber.toString(), "UTF-8"));
            
            sTmp += objSettings.INSERTDATA.replaceAll("#jobcardno#", URLEncoder.encode(Jobcardnumber.toString(), "UTF-8"));
             sTmp += objSettings.INSERTDATA.replaceAll("#Item#", URLEncoder.encode(Item.toString(), "UTF-8"));
             sTmp += objSettings.INSERTDATA.replaceAll("#setuptime#", URLEncoder.encode(Setuptime.toString(), "UTF-8"));
           //  sTmp += objSettings.INSERTDATA.replaceAll("#operationaltime#", URLEncoder.encode(operationaltime.toString(), "UTF-8"));
             sTmp += objSettings.INSERTDATA.replaceAll("#Qty#", URLEncoder.encode(Qty.toString(), "UTF-8"));
             sTmp += objSettings.INSERTDATA.replaceAll("#Empno#", URLEncoder.encode(EmpNumber, "UTF-8"));
             sTmp += objSettings.INSERTDATA.replaceAll("#Name#", URLEncoder.encode(EmpName.toString(), "UTF-8"));
             sTmp += objSettings.INSERTDATA.replaceAll("#Mcno#", URLEncoder.encode(Mcno.toString(), "UTF-8"));
             sTmp += objSettings.INSERTDATA.replaceAll("#Supervisername#", URLEncoder.encode(Supervisername.toString(), "UTF-8"));
             
             
             
            
            sTmp += getSettings.callURL(objSettings.INSERTDATA.replaceAll("#jobno#", URLEncoder.encode(Jobcardnumber.toString(), "UTF-8")));
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
     public  void Status(String Job)
    {
        if(Job.equalsIgnoreCase("START")){
            System.out.println("Testt tets");
            
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            log.main("START");
            log.main(dateFormat.format(Startdate));
            
            
            starttime = dateFormat.format(Startdate);
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
            
            
            TotalTime = "Start time"+starttime;
            
            log.main(TotalTime);
            
            System.out.println("In Start");
            System.out.println(TotalTime);
            
        }
        else if(Job == "STOP"){
            
            steps=2;
            
            
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            
            
            log.main("STOP");
            log.main(dateFormat.format(Startdate));
            
            
            Endtime = dateFormat.format(Startdate);
            
            TotalTime +="End time"+Endtime;
            System.out.println(TotalTime);
            
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
             log.main(TotalTime);
         
            
        }
        if(Job.equalsIgnoreCase("SETUPSTART")){
            System.out.println("Testt tets");
           
            
            
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            log.main("SETUP START");
            log.main(dateFormat.format(Startdate));
            
            
            
            
            Setupstarttime = dateFormat.format(Startdate);
            
            
            TotalTime +="Setuptime"+Setupstarttime;
            log.main(TotalTime);
            
            long test ;
            test = System.currentTimeMillis();
            System.out.println(test);
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
            
            System.out.println("In Start");
            System.out.println(TotalTime);
        }
        else if(Job == "SETUPSTOP"){
            
            steps=1;
            
            
            
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            log.main("SETUP STOP");
            log.main(dateFormat.format(Startdate));
            
            
            Setupendtime = dateFormat.format(Startdate);
            
            TotalTime +="Setupendtime"+Setupendtime;
            
            System.out.println(TotalTime);
            
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
            
            log.main(TotalTime);
            
        }
          else if(Job == "REMARKS"){
            
            steps=3;
            System.out.println(TotalTime);
        }
          
          
          
           else if(Job == "PAUSE"){
            
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            
            log.main("PAUSE");
            log.main(dateFormat.format(Startdate));
            
            pausetime = dateFormat.format(Startdate);
            
            TotalTime +="pausetime"+pausetime;
            System.out.println(TotalTime);
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
            
            log.main("");
            
        }
           else if(Job == "TERMINATE"){
               
               
               
               
               
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            
             log.main("TERMINATE");
            log.main(dateFormat.format(Startdate));
            
            Terminatetime = dateFormat.format(Startdate);
            
            TotalTime +="Terminatetime"+Terminatetime;
            
              System.out.println(TotalTime);
            steps=0;
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
          
            pushdata();
            
        }
          
           if(Job.equalsIgnoreCase("RESUME")){
            System.out.println("Testt RESUME");
            
            
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            
            
            
            Resumetime = dateFormat.format(Startdate);
            
            
            TotalTime +="Resumetime"+Resumetime;
            
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
            
            System.out.println("In RESUME");
            System.out.println(TotalTime);
        }
               
           if(Job.equalsIgnoreCase("END")){
            System.out.println("Testt RESUME");
            steps=0;
            
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date Startdate = new Date();
            System.out.println(dateFormat.format(Startdate)); //2016/11/16 12:08:43
            
            
            
            
            Endtime = dateFormat.format(Startdate);
            TotalTime +="Endtime"+Endtime;
            
            EmpNumber = Employeenumber.getText();
            EmpNumber = Employeenumber.getText();
            Costcenter = Costcenterlbl.getText();
            Supervisername = SuperviserName.getText();
            Jobcardnumber = JobcardNumer.getText();
            Item = Itemcode.getText();
            Opnnumber = OPNNO.getText();
            Setuptime = Setuptimelbl.getText();
            
            System.out.println("In END");
            System.out.println(TotalTime);
               pushdata();
        }
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws InterruptedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Costcenterlbl;
    private javax.swing.JLabel Descriptionlabel;
    private javax.swing.JLabel Employeename;
    private javax.swing.JLabel Employeenumber;
    private javax.swing.JLabel Itemcode;
    private javax.swing.JLabel JobcardNumer;
    private javax.swing.JLabel Mcno;
    private javax.swing.JLabel OPNNO;
    private javax.swing.JLabel Operationaldesignlabel;
    private javax.swing.JLabel Operationaltimelabel;
    private javax.swing.JLabel Qtylabel;
    private javax.swing.JLabel Sch_End_date;
    private javax.swing.JLabel Sch_Start_date;
    private javax.swing.JLabel Setuptimelbl;
    private javax.swing.JLabel SuperviserName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel jobbnumberlabe;
    private javax.swing.JLabel lblJobOrderNo;
    // End of variables declaration//GEN-END:variables
}
